[
    {
        "id": 10,
        "projectName": "Slider Puzzle Game",
        "projectTitle": "Slider Puzzle Game",
        "projectTeam": "A Solo Project",
        "subtitle": "A 15 puzzle slider style game",
        "category": "Web game app",
        "techDescription": "React | JavaScript | HTML | CSS | Netlify Hosting | GitHub",
        "link": "/slider-puzzle-game",
        "gitHubLink": "https://github.com/SJ47/slider-puzzle-game",
        "liveAppLink": "https://slider.scottjohnston.dev/",
        "image": "../static/images/slider-puzzle-game.png",
        "brief": "Create a classic 15 sliding tile style puzzle game where the player moves numbers around to get them into the correct order. ",
        "learning": "<p>The object of this project was create the basics of a slider puzzle game that could be used a baseline for growing out this game with additional gaming options or as a template for similar style grid and board games.</p><p>The learning in this project was more about the logic and checking the game play always followed the logic of what is allowed in the game.  For example, keeping track of the space tile and being able to move the space tile by clicking on its surrounding numbers.</p>"
    },
    {
        "id": 9,
        "projectName": "Firebase Auth Demo",
        "projectTitle": "Firebase AUthentication",
        "projectTeam": "A Solo Project",
        "subtitle": "Firebase Authentication Demo",
        "category": "Web app",
        "techDescription": "React | JavaScript | Firebase Auth | Firebase Firestore | HTML | CSS | Netlify Hosting | GitHub",
        "link": "/firebase-auth-demo",
        "gitHubLink": "https://github.com/SJ47/firebase-auth-demo",
        "liveAppLink": "https://firebase-auth-demo.scottjohnston.dev/",
        "image": "../static/images/firebase-auth.png",
        "miniBrief": "Create a demo app module to use Firebase email and password authentication and Firebase Firestore database to store user credentials.  Also have a working option to sign in with Google OAuth 2.0 as an alternative authentication/sign in method.",
        "brief": "Create a demo app module to use Firebase email and password authentication and Firebase Firestore database to store user credentials.  Also have a working option to sign in with Google OAuth 2.0 as an alternative authentication/sign in method.<p>A user should be able to:<ol><li>Create a new account</li> <li>Sign in to their account</li> <li>Reset password via forgot password email to reset</li> <li>Change their email address</li><li>Change their password</li><li>Edit their profile name and picture URL</li><li>View their profile</li><li>Delete their account</li></ol></p>",
        "learning": "<p>The object of this project was create a module for authentication that could be easily imported into any future apps with minimal effort.</p><p>This gave me a good grounding in using Firebase auth and Firestore tools.</p><p>I learned how to use Firebase email and password authentication, where user credentials are stored in the Firebase Firestore database.</p><p>I also learned about using Google OAuth 2.0 for a sign in with Google option.</p><p>Additional knowledge and skills learned during this project included: <ul><li>Working with protected routes (routes locked to authenticated users only)<li>API key handling to keep those keys secret and safe</li><li>Reading, writing and interfacing to the Firestore database</li><li>CSS styling with the Material UI library</li></ul>"
    },
    {
        "id": 1,
        "projectName": "Foodee",
        "projectTitle": "Foodee App",
        "projectTeam": "A CodeClan Group Project",
        "subtitle": "A food & drink table service ordering app",
        "category": "Web App for Mobile",
        "techDescription": "Java | Spring Framework | React | JavaScript | HTML | CSS | Leaflet.js | Stripe Payments",
        "link": "/foodee",
        "gitHubLink": "https://github.com/SJ47/foodee",
        "liveAppLink": "https://foodee.scottjohnston.dev",
        "image": "../static/images/foodee.png",
        "brief": "Create a Covid friendly table food and drink ordering web app to allow customers at a bar, pub or restaurant to place food and drink orders from their table.  The customer should also be able to pay using credit card integrating Stripe payment.",
        "learning": "<p>This was my third and final project whilst studying Professional Software Development with CodeClan.  It was a group project that went from the seedling of an idea to a full working app in the space of just 7 days.</p><p>After creating the brief, MVP and extensions to work on, we started the task of design and planning.  This included database design, front-end design with component diagrams, mock wireframe diagrams and mood boards.</p><p>In the Java back-end, I got to work on and improve my skills with derived queries, JPA and Hibernate, H2 database, annotations and restful routes.</p><p>In the front-end, I gained more experience using React and JavaScript and fetching API data from our back-end routes.  I also gained new skills in setting up Stripe payments in both the back-end and front-end for taking credit payments using Stripe APIs. </p><p>Other technical skills and working practices I improved on include using Git for software source control along with an Agile approach to project work, in having daily stand-ups, working from Kanban board for task management, team working with pair-programming along with solo programming.<p>Please feel free to click on the DEMO sign at the top of the page to see the project running live.</p>"
    },
    {
        "id": 2,
        "projectName": "Endangered Animals",
        "projectTitle": "Endangered Animals App",
        "projectTeam": "A CodeClan Group Project",
        "subtitle": "An educational app about endangered animals",
        "category": "Web App",
        "techDescription": "React | JavaScript | HTML | CSS | Express | MongoDB | Leaflet.js",
        "link": "/endangered-animals",
        "gitHubLink": "https://github.com/SJ47/project_endangered_animals",
        "liveAppLink": "https://endangered-animals.herokuapp.com",
        "image": "../static/images/endangered-animals-app.jpg",
        "brief": "Develop an interactive browser application that is educational and fun whilst highlighting some of the worlds endangered animals.",
        "learning": "<p>This was my second project whilst studying Professional Software Development with CodeClan.  It was a group project that went from the seedling of an idea to a full working app in the space of just 6 days.</p><p>After creating the brief, MVP and extensions to work on, we started the task of design and planning.  This included database design to act as our API, front-end design with component diagrams and mock wireframe diagrams.</p><p>In the Node back-end, I got to work on and improve my skills with Express server, MongoDB and restful routes.</p><p>In the front-end, I gained experience using React and JavaScript and fetching API data from our back-end routes.  I also got more experience using CSS styling.  I gained new skills in setting up an interactive map with Leaflet.js.</p><p>Other technical skills and working practices I improved on include using Git for software source control along with an Agile approach to project work, in having daily stand-ups, working from Kanban board for task management, team working with pair-programming along with solo programming.<p>Please feel free to click on the DEMO sign at the top of the page to see the project running live.</p>"
    },
    {
        "id": 8,
        "projectName": "Portfolio Web Site",
        "projectTitle": "Portfolio Site Showcase",
        "projectTeam": "A Solo Project",
        "subtitle": "Portfolio of software development projects",
        "category": "Web app",
        "techDescription": "React | JavaScript | HTML | CSS | Netlify Hosting | GitHub",
        "link": "/scottjohnston-portfolio",
        "gitHubLink": "https://github.com/SJ47/scottjohnston-portfolio",
        "liveAppLink": "https://scottjohnston.dev/",
        "image": "../static/images/scottjohnston-portfolio.png",
        "brief": "Create a contemporary portfolio web site show casing software development skills, knowledge and projects.",
        "learning": "<p>This was a fun project I completed (I say completed, but it is a living project) after my studying of Professional Software Development with CodeClan finished.  The object was simply to design and host a web site portfolio for showcasing my project creations, skills and learning that I have acquired during and after my studying with CodeClan.</p><p>I decided to use React for the front-end for developing my portfolio as I felt this would be best for managing multiple projects as I add more over time with the least amount change to the code going forward.</p><p>I initially hard coded all the project pages and data for each, but it was quickly becoming apparent that for each project I was adding, there was a lot of repeatable code and functionality going on.</p><p>I then decided to refactor the project to use a template style of building the page using React for each project.  This meant that each project would look similar in the design and layout of each project page.</p><p>I was also able to use a JSON data file for storing all the data for each project, which means going forward I just need to add the project information to the JSON file and the project will show up in my portfolio looking like all the other previous projects without changing any code.</p><p>This project and others showcased are hosted on Netlify, Heroku and MongDB Atlas.  This improved my skills and knowledge for hosting web sites on various cloud platforms.</p><p>Please feel free to click on the DEMO sign at the top of the page to see the project running live - however, as you are already here looking at my portfolio, that seems kind of weird and you would be entering into the world of infinite loops 😏.</p>"
    },
    {
        "id": 3,
        "projectName": "My Not ToDo List",
        "projectTitle": "My Not ToDo List App",
        "projectTeam": "A Solo Project",
        "subtitle": "Project To Develop MERN Stack Skills",
        "category": "Web App",
        "techDescription": "React | JavaScript | MongoDB | RestAPI | Node | Express | HTML | CSS | Serverless Functions",
        "link": "/my-not-todo-list",
        "gitHubLink": "https://github.com/SJ47/my-not-todo-list-serverless-functions",
        "liveAppLink": "https://todo.scottjohnston.dev",
        "image": "../static/images/todo.png",
        "brief": "Develop a simple ToDo web app using the MERN stack then refactor to use Serverless Functions to replace Node and Express in the backend.",
        "learning": "<p>This was a small project I completed after my studying of Professional Software Development with CodeClan finished.  It was a small ToDo list project (yes, I know - not another ToDo app!) </p><p>I created a brief, MVP and extensions to work on, that would re-enforce my skills using the MERN stack.</p><p>In the back-end I setup a Node express server and connected to a MongoDB Atlas database in the cloud using restful routes.</p><p>In the front-end, I gained more experience using React and JavaScript and fetching API data from my back-end routes.</p><p>After completing this project, I refactored the project to use Serverless Lambda Functions with Netlify instead of Node Express in the backend.  This was a great skill to pickup and alternative to using Node Express in the back-end for serving routes.<p>Please feel free to click on the DEMO sign at the top of the page to see the project running live.</p>"
    },
    {
        "id": 4,
        "projectName": "TV Show Search",
        "projectTitle": "TV Show Search App",
        "projectTeam": "A CodeClan Solo Project",
        "subtitle": "Search and manage favourite TV shows",
        "category": "Web App",
        "techDescription": "React | JavaScript | HTML | CSS | fetch | API",
        "link": "/tv-show-search-app",
        "gitHubLink": "https://github.com/SJ47/TV-Show-Search-App",
        "liveAppLink": "https://tv-show-search.scottjohnston.dev",
        "image": "../static/images/tv-show-search-app.jpg",
        "brief": "Create a web app to allow a user to search for TV shows and create a list of their favourite shows.",
        "learning": "<p>This was a weekend homework exercise during my studying of Professional Software Development with CodeClan.  It was to re-enforce my learning of using fetch and external APIs.</p><p>I decided to use the TVMaze API for the purpose of fetching TV shows based on a users input.</p><p>In the front-end, I gained more experience using React, JavaScript and fetching API data from an external source.</p><p>I improved my skills with React using state to manage searching shows, handling shows being returned and managing the users favourite shows as well as passing functions down as props to children.<p>Please feel free to click on the DEMO sign at the top of the page to see the project running live.</p>"
    },
    {
        "id": 5,
        "projectName": "Retro Video Game Library",
        "projectTitle": "Retro Video Game Library",
        "projectTeam": "A CodeClan Solo Project",
        "subtitle": "Using JavaScript to inject HTML into the DOM",
        "category": "Web App",
        "techDescription": "HTML Injection | DOM Manipulation | JavaScript | HTML | CSS",
        "link": "/retro-video-game-library",
        "gitHubLink": "https://github.com/SJ47/Retro-Video-Game-Library",
        "liveAppLink": "https://retro-game-library.scottjohnston.dev",
        "image": "../static/images/retro-video-game-library.png",
        "brief": "Create a web app for using JavaScript only to inject all the HTML code directly into the DOM to improve learning about DOM manipulation.",
        "learning": "<p>This was a weekend homework exercise during my studying of Professional Software Development with CodeClan.  It was to re-enforce my learning and understanding of the Document Object Model (DOM).</p><p>I decided to go all in and use JavaScript to insert, update and delete all HTML DOM elements inside the &lt;BODY&gt; tags using nothing but JavaScript.</p><p>This took a lot longer than I initially anticipated due to the planning and layout of each node element in the DOM tree.</p><p>Whilst I will never likely approach DOM manipulation in this way again, it gave me a great understanding of how the DOM and it's elements are structured.<p>Please feel free to click on the DEMO sign at the top of the page to see the project running live.</p>"
    },
    {
        "id": 6,
        "projectName": "Sports Scoring App",
        "projectTitle": "Sports Scoring App",
        "projectTeam": "A CodeClan Solo Project",
        "subtitle": "Football league, fixtures and results",
        "category": "Web App",
        "techDescription": "Python | Flask | Jinja2 | PostgreSQL | CRUD | HTML | CSS",
        "link": "/sports-scoring-app",
        "gitHubLink": "https://github.com/SJ47/Sports-Scoring-App",
        "liveAppLink": "https://sports-scoring-app.herokuapp.com/",
        "image": "../static/images/sports-scoring-app.png",
        "brief": "Build an app that lets a sports fan keep track of their favourite sports league.  This should include league tables, fixture lists and results.",
        "learning": "<p>This was my first project whilst studying Professional Software Development with CodeClan.  It was a solo project to re-enforce our learning of Python.  It went from an initial idea to a full working app in the space of just 6 days.</p><p>After creating the brief, MVP and extensions to work on, I started the task of design and planning.  This included class diagrams, wireframe diagrams using Adobe XD, user journey documents, database schema and table design for the PostgreSQL database.</p><p>In the back-end, I got to work on and improve my skills with Python Flask, PostgreSQL, CRUD functions and routing.</p><p>In the front-end, I gained experience using Python, Jinja2 and fetching data from our back-end database using SQL statements.  I also got more experience using CSS styling with tables.</p><p>As this was a solo project, it was quite daunting at first giving up so much time at the start of the project for design and planning, knowing there was deadline to meet for the overall project.  However, this re-enforced the teaching we received that good planning and design is key to keeping a project on track.<p>Please feel free to click on the DEMO sign at the top of the page to see the project running live.</p>"
    },
    {
        "id": 7,
        "projectName": "Rock, Paper, Scissors",
        "projectTitle": "Rock, Paper, Scissors",
        "projectTeam": "A CodeClan Solo Project",
        "subtitle": "Simple game of Rock, Paper & Scissors",
        "category": "Web Game",
        "techDescription": "Python | Flask | PostgreSQL | HTML | CSS",
        "link": "/rock-paper-scissors-game",
        "gitHubLink": "https://github.com/SJ47/Rock-Paper-Scissors-Game",
        "liveAppLink": "https://rock-paper-scissors-sj.herokuapp.com/",
        "image": "../static/images/rock-paper-scissors.png",
        "brief": "Create a simple game of Rock, Paper and Scissors to demonstrate learning of Python and Flask.",
        "learning": "<p>This was a weekend homework exercise during my studying of Professional Software Development with CodeClan.  It was to re-enforce my learning of Python after week 3.</p><p>I decided to complete the MVP and all extensions so that a player could play against the computer.</p><p>This helped improve my understanding of applying logic to the game with regards to the rules of the game and how to check for a winner.</p><p>I improved my skills and understanding with Python and scoping of methods in the class with class methods and static methods.<p>Please feel free to click on the DEMO sign at the top of the page to see the project running live.</p>"
    }
]
